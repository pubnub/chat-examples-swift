# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

before_all do |lane, options|
  # Setup for the Travis CI environment
  setup_travis
  # Download dependencies using Cocoapods
  cocoapods(clean: true, repo_update: true)
  # Ensure that the test output dir exists
  FileUtils.mkdir_p 'test_output'
end

desc "This lane is used to lint and test all schemes in the workspace"
lane :lint_and_test_snippets do |options|
  # Lint Swift files: https://docs.fastlane.tools/actions/swiftlint/
  swiftlint(
    executable: "Pods/SwiftLint/swiftlint",
    output_file: "fastlane/test_output/swiftlint.result.json"
  )

  # Perform Test Runs: https://docs.fastlane.tools/actions/scan/
  scan(
    workspace: "chat-examples-swift.xcworkspace",
    scheme: "Snippets",
    devices: ["iPhone 6s"],
    skip_build: true,
    output_files: "report_snippets_crc.html,report_snippets_crc.junit"
  )

  # Read Current Git Branch
  branch_name = git_branch
  UI.message("Current Git Branch #{branch_name}")

  # Check if it's the 'master' branch
  is_master = branch_name.match?("^master")

  # Check if the latest commit has the key phrase to skip doc generation
  should_skip_docs = last_git_commit.include?("[skip docs]")

  # Check if there have been any changes inside the source dir
  snippets_dir = options[:source_dir] ||= "Snippets"
  has_changes = false
  Dir.chdir ".." do
    has_changes = !sh("git status --porcelain #{snippets_dir}").empty?
  end

  # Ensure that we can read the private token for TravisCI
  token = options[:token]

  if !token.nil? && is_master && has_changes && !should_skip_docs
    UI.success("------------------------------------------")
    UI.success("--- Step: Triggering CRC Travis Builds ---")
    UI.success("------------------------------------------")
  else
    UI.success("--------------------------------------")
    UI.success("--- Step: Docs will not be updated ---")
    UI.success("--------------------------------------")
    UI.message("Is Master? #{is_master}")
    UI.message("Has Changes? #{has_changes}")
    UI.message("Skip Docs? #{should_skip_docs}")
    UI.message("Missing Token? #{token.nil?}")
  end
end

desc "This lane is used to lint and test all schemes in the workspace"
lane :lint_and_test_examples do |options|
  # Lint Swift files: https://docs.fastlane.tools/actions/swiftlint/
  swiftlint(
    executable: "Pods/SwiftLint/swiftlint",
    output_file: "fastlane/test_output/swiftlint.result.json"
  )

  # Perform Test Runs: https://docs.fastlane.tools/actions/scan/
  scan(
    workspace: "chat-examples-swift.xcworkspace",
    scheme: "ResourceCenterDemo",
    devices: ["iPhone 6s"],
    output_files: "report_example_rcdemo.html,report_example_rcdemo.junit"
  )
end
