@fastlane_dir = File.expand_path File.dirname(__FILE__)
require "#{@fastlane_dir}/../generate_xcconfigs"

# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

before_all do |lane, options|
  # Run Type.  Use the passed in option if it exists or assume local
  @kickoff_reason = !options[:kickoff_reason].to_s.empty? ? options[:kickoff_reason] : "local"

  # Determines if fastlane is ran on a CI env: https://docs.fastlane.tools/actions/is_ci/
  if is_ci?
    # Setup for the Travis CI environment: https://docs.fastlane.tools/actions/setup_travis/
    setup_travis
  end
  # Download dependencies using Cocoapods: https://docs.fastlane.tools/actions/cocoapods/
  cocoapods(clean: true, repo_update: true)
  # Ensure that the test output dir exists
  FileUtils.mkdir_p 'test_output'
end

desc "This lane is used to lint and test all schemes in the workspace"
lane :lint_and_test_snippets do |options|
  # Lint Swift files: https://docs.fastlane.tools/actions/swiftlint/
  swiftlint(
    executable: "Pods/SwiftLint/swiftlint",
    output_file: "fastlane/test_output/swiftlint.result.json"
  )

  # Perform Test Runs: https://docs.fastlane.tools/actions/scan/
  scan(
    workspace: "chat-examples-swift.xcworkspace",
    scheme: "Snippets",
    devices: ["iPhone 6s"],
    skip_build: true,
    output_files: "report_snippets_crc.html,report_snippets_crc.junit"
  )
end

desc "This lane is used to lint and test all schemes in the workspace"
lane :lint_and_test_examples do |options|
  # We need to execute this command inside the project root dir, not in fastlane/
  if !generate_xcconfigs()
    UI.error("----------------------------------------------")
    UI.error("--- ðŸ’¥ðŸ’¥ Error Creating XCConfig Files ðŸ’¥ðŸ’¥ ---")
    UI.error("----------------------------------------------")
    UI.user_error!("Error Creating XCConfig Files")
  end

  # Lint Swift files: https://docs.fastlane.tools/actions/swiftlint/
  swiftlint(
    executable: "Pods/SwiftLint/swiftlint",
    output_file: "fastlane/test_output/swiftlint.result.json"
  )

  # Perform Test Runs: https://docs.fastlane.tools/actions/scan/
  scan(
    workspace: "chat-examples-swift.xcworkspace",
    scheme: "ResourceCenterDemo",
    devices: ["iPhone 6s"],
    output_files: "report_example_rcdemo.html,report_example_rcdemo.junit"
  )
end
